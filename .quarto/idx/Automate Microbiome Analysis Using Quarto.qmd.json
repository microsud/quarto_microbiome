{"title":"Automate Microbiome Analysis Using Quarto","markdown":{"yaml":{"title":"Automate Microbiome Analysis Using Quarto","author":"Sudarshan A. Shetty","format":"html","editor":"visual"},"containsRefs":false,"markdown":"\n\nAs a microbiome researcher, we are often working on different data sets. One thing we have to acknowledge is the fact that several basic analysis are same. We look at the data in few steps, quality check, calculating and visualization of alpha and beta diversity as well the compostion between groups. These are standard tasks that are routinely performed. We usually end up copy pasting codes or if we forget repeat the procedure of writing code and searching *stack overflow* or *GitHub* issues.\\\nWhat if we could automate these analysis? Recently, I was intrigued by discussions around the development of `Quarto` by [Posit](https://posit.co/) (formerly RStudio).\n\nIf you are already using Rmarkdown (.rmd) you will find the quarto document (.qmd) very similar. Below you can see an simple example. Here, the analysis includes reading the phyloseq object stored as \\*.rds file, calculating reads per sample, Shannon diversity, Observed ASVs and investigating if there is a correlation between reads per sample and Shannon diversity, Observed ASVs.\n\nBecause all you're doing is writing a small example script, you just grab a few variables at random and plot them in a pretty simple Quarto document. That .qmd looks like this:\n\n{{< include simple_intro/simple_intro >}}\n\nThis simple task is pretty much repeated for every 16S rRNA gene profiling project that I am involved. Seems redundant to write/copy the codes everything. Here two things will change based on the project, the input **phyloseq object** and the primary variable of interest i.e. **ILI**.\n\nHere, quarto is handy with its `params` options. Which can be specified as shown below.\n\n{{< include params_example/params_example >}}\n\nNotice the `pseq_path: pseq_path` and `primary_var: primary_var`. These are the 'floating' variables. We can write a simple function that will process the .qmd file which we call 'basic_analysis.qmd' [see here]() and store it in our *RProject* directory. Below is the draft of this file.\n\n{{< include params_example_full/params_example_full >}}\n\nNow to render this report we can write a simple function called `build_my_report`.\n\n```{r eval=FALSE}\nbuild_my_report <- function(qmd_file=NULL,\n                            pseq_path = NULL,\n                            primary_var = NULL) {\n    \n    {\n        # params.lists <-\n        base_name <- qmd_file\n        base_name <- gsub(\".qmd\", \"\", base_name)\n        quarto::quarto_render(input = qmd_file,\n                              output_file = paste0(base_name, \"_report.html\"),\n                              quiet = FALSE,\n                              execute_params = list(\"pseq_path\" = pseq_path,\n                                                    \"primary_var\" = primary_var),\n                              execute_debug = FALSE,\n                              cache = NULL,\n                              cache_refresh = FALSE,\n                              debug = FALSE)\n        cat(\"HTML report created in output directory\\n\")\n    }\n}\n\n```\n\nThe `build_my_report` function has three arguments. \\\n1. `qmd_file` = This is the name of the qmd template file i.e. `basic_analysis.qmd`\\\n2. `pseq_path` = This is the path to the `phyloseq object` for which we want to run the analysis.\\\n3. `primary_var` = This is the primary variable we want to investigate. Here, *ILI* is the column name in `sample_data()` of the phyloseq object `FuentesIliGutData`\n\n```{r eval=FALSE}\nbuild_my_report(qmd_file=\"basic_analysis.qmd\",\n                pseq_path = \"data/FuentesIliGutData.rds\",\n                primary_var = \"ILI\")  \n```\n\nThe rendered file can be found [here]()\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"Automate Microbiome Analysis Using Quarto.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.2.269","editor":"visual","theme":"cosmo","title":"Automate Microbiome Analysis Using Quarto","author":"Sudarshan A. Shetty"},"extensions":{"book":{"multiFile":true}}}}}