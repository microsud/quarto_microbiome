[
  {
    "objectID": "basic_analysis.html",
    "href": "basic_analysis.html",
    "title": "Microbiota Analysis",
    "section": "",
    "text": "In this document, we investigate whether the Shannon diversity and Observed ASVs of samples is correlated to their sequencing depth."
  },
  {
    "objectID": "basic_analysis.html#load-libraries",
    "href": "basic_analysis.html#load-libraries",
    "title": "Microbiota Analysis",
    "section": "Load libraries",
    "text": "Load libraries\n\nlibrary(phyloseq)\nlibrary(microbiome)\nlibrary(ggpubr) # stats with viz\nlibrary(patchwork) # combine plots"
  },
  {
    "objectID": "basic_analysis.html#define-parameters",
    "href": "basic_analysis.html#define-parameters",
    "title": "Microbiota Analysis",
    "section": "Define parameters",
    "text": "Define parameters\n\npseq_path = params$pseq_path\nprimary_var = params$primary_var"
  },
  {
    "objectID": "basic_analysis.html#read-data",
    "href": "basic_analysis.html#read-data",
    "title": "Microbiota Analysis",
    "section": "Read Data",
    "text": "Read Data\n\npseq <- readRDS(pseq_path)\n## Error in gzfile(file, \"rb\"): cannot open the connection"
  },
  {
    "objectID": "basic_analysis.html#check-reads",
    "href": "basic_analysis.html#check-reads",
    "title": "Microbiota Analysis",
    "section": "Check Reads",
    "text": "Check Reads\n\n# add reads/sample to sample_data()\nsample_data(pseq)$reads.per.sample <- sample_sums(pseq)\n## Error in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'otu_table': object 'pseq' not found\n# Compare between groups\npseq |> \n    microbiome::meta() |> \n    ggplot(aes_string(primary_var, \"reads.per.sample\")) +\n    geom_violin()+\n    geom_boxplot(width=0.2) +\n    labs(x=\"\", y=\"Reads/sample\")\n## Error in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'sample_data': object 'pseq' not found\n\nNote here that we have higher reads/sample in L2 group."
  },
  {
    "objectID": "basic_analysis.html#alpha-diversity",
    "href": "basic_analysis.html#alpha-diversity",
    "title": "Microbiota Analysis",
    "section": "Alpha diversity",
    "text": "Alpha diversity\n\n# we can add shannon diversity to sample_data(pseq)\nsample_data(pseq)$shannon <- microbiome::diversity(pseq, index=\"shannon\")[,1]\n## Error in is(x): object 'pseq' not found\nsample_data(pseq)$observed <- microbiome::richness(pseq, index=\"observed\")[,1]\n## Error in is(x): object 'pseq' not found\np.shannon <- meta(pseq) |> \n    ggplot(aes_string(primary_var, \"shannon\")) +\n    geom_violin()+\n    geom_boxplot(width=0.2) +\n    labs(x=\"\", y=\"Shannon Diversity\")\n## Error in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'sample_data': object 'pseq' not found\np.observed <- meta(pseq) |> \n    ggplot(aes_string(primary_var, \"observed\")) +\n    geom_violin()+\n    geom_boxplot(width=0.2) +\n    labs(x=\"\", y=\"Observed ASVs\")\n## Error in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'sample_data': object 'pseq' not found\n\np.shannon | p.observed\n## Error in eval(expr, envir, enclos): object 'p.shannon' not found"
  },
  {
    "objectID": "basic_analysis.html#correlation",
    "href": "basic_analysis.html#correlation",
    "title": "Microbiota Analysis",
    "section": "Correlation",
    "text": "Correlation\nCheck if reads per sample is correlated to Shannon diversity and Observed ASVs.\n\np.shanon.cor <- meta(pseq) |> \n    ggplot(aes_string(\"reads.per.sample\", \"shannon\")) +\n    geom_point() +\n    geom_smooth(method = \"lm\") +\n    ggpubr::stat_cor(method = \"spearman\", label.y = 2)+\n    labs(x=\"Reads/sample\", y=\"Shannon Diversity\")\n## Error in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'sample_data': object 'pseq' not found\np.observed.cor <- meta(pseq) |> \n    ggplot(aes_string(\"reads.per.sample\", \"observed\")) +\n    geom_point() +\n    geom_smooth(method = \"lm\") +\n    ggpubr::stat_cor(method = \"spearman\", label.y = 2) +\n    labs(x=\"Reads/sample\", y=\"Observed ASVs\")\n## Error in h(simpleError(msg, call)): error in evaluating the argument 'object' in selecting a method for function 'sample_data': object 'pseq' not found\n\np.shanon.cor | p.observed.cor\n## Error in eval(expr, envir, enclos): object 'p.shanon.cor' not found\n\n\nsessionInfo()\n## R version 4.2.1 (2022-06-23 ucrt)\n## Platform: x86_64-w64-mingw32/x64 (64-bit)\n## Running under: Windows 10 x64 (build 19044)\n## \n## Matrix products: default\n## \n## locale:\n## [1] LC_COLLATE=English_United States.utf8 \n## [2] LC_CTYPE=English_United States.utf8   \n## [3] LC_MONETARY=English_United States.utf8\n## [4] LC_NUMERIC=C                          \n## [5] LC_TIME=English_United States.utf8    \n## \n## attached base packages:\n## [1] stats     graphics  grDevices utils     datasets  methods   base     \n## \n## other attached packages:\n## [1] patchwork_1.1.2   ggpubr_0.4.0      microbiome_1.18.0 ggplot2_3.3.6    \n## [5] phyloseq_1.40.0  \n## \n## loaded via a namespace (and not attached):\n##  [1] Biobase_2.56.0         tidyr_1.2.0            jsonlite_1.8.0        \n##  [4] splines_4.2.1          foreach_1.5.2          carData_3.0-5         \n##  [7] assertthat_0.2.1       stats4_4.2.1           GenomeInfoDbData_1.2.8\n## [10] yaml_2.3.5             backports_1.4.1        pillar_1.8.1          \n## [13] lattice_0.20-45        glue_1.6.2             digest_0.6.29         \n## [16] XVector_0.36.0         ggsignif_0.6.3         colorspace_2.0-3      \n## [19] htmltools_0.5.3        Matrix_1.5-1           plyr_1.8.7            \n## [22] pkgconfig_2.0.3        broom_1.0.1            zlibbioc_1.42.0       \n## [25] purrr_0.3.4            scales_1.2.1           Rtsne_0.16            \n## [28] tibble_3.1.7           mgcv_1.8-40            car_3.1-0             \n## [31] generics_0.1.3         IRanges_2.30.0         ellipsis_0.3.2        \n## [34] withr_2.5.0            BiocGenerics_0.42.0    cli_3.3.0             \n## [37] survival_3.3-1         magrittr_2.0.3         crayon_1.5.1          \n## [40] evaluate_0.16          fansi_1.0.3            nlme_3.1-157          \n## [43] MASS_7.3-57            rstatix_0.7.0          vegan_2.6-2           \n## [46] tools_4.2.1            data.table_1.14.2      lifecycle_1.0.2       \n## [49] stringr_1.4.1          Rhdf5lib_1.18.2        S4Vectors_0.34.0      \n## [52] munsell_0.5.0          cluster_2.1.3          Biostrings_2.64.0     \n## [55] ade4_1.7-19            compiler_4.2.1         GenomeInfoDb_1.32.2   \n## [58] rlang_1.0.5            rhdf5_2.40.0           grid_4.2.1            \n## [61] RCurl_1.98-1.6         iterators_1.0.14       rhdf5filters_1.8.0    \n## [64] biomformat_1.24.0      rstudioapi_0.14        htmlwidgets_1.5.4     \n## [67] igraph_1.3.1           bitops_1.0-7           rmarkdown_2.16        \n## [70] gtable_0.3.1           codetools_0.2-18       multtest_2.52.0       \n## [73] abind_1.4-5            DBI_1.1.3              reshape2_1.4.4        \n## [76] R6_2.5.1               knitr_1.40             dplyr_1.0.9           \n## [79] fastmap_1.1.0          utf8_1.2.2             permute_0.9-7         \n## [82] ape_5.6-2              stringi_1.7.6          parallel_4.2.1        \n## [85] Rcpp_1.0.8.3           vctrs_0.4.1            tidyselect_1.1.2      \n## [88] xfun_0.31"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Automate Microbiome Analysis Using Quarto",
    "section": "",
    "text": "Note\n\n\n\nBefore you start, please familiarize yourself with RStudio and its RStudio projects.\n\n\nAs someone analyzing microbiome data, you may find yourself frequently working with different data sets and performing the same basic analyses over and over again. These standard tasks, such as quality checking, calculating alpha and beta diversity, and visualizing the composition between groups, can be time-consuming if you’re constantly copy-pasting code or searching for solutions on Stack Overflow or GitHub.\nWouldn’t it be great if you could automate these analyses? That’s where Quarto comes in. Developed by Posit (formerly RStudio), Quarto is the next generation version of Rmarkdown (.rmd) tool that makes it easy to perform these common tasks and more. In fact, if you’re already familiar with Rmarkdown, you’ll find the Quarto document (.qmd) very similar. Here you can find the installation details.\nHere’s a simple example of what you can do with Quarto: read in a phyloseq object stored as an *.rds file, calculate reads per sample, Shannon diversity, and Observed ASVs, and investigate whether there is a correlation between reads per sample and Shannon diversity, Observed ASVs. I use the data from Fuentes et al. that consists of gut microbiota profiles from older adults with (L1 and L2) and without (C) influenza-like illness. This information is stored in the column called ILI in the sample_data of the phyloseq object FuentesIliGutData.rds.\n---\ntitle: \"Microbiota Analysis\"\nauthor: Sudarshan A. Shetty\ndate: \"2023-01-08\"\nformat:\n  html:\n    code-tools: true\n    code-fold: false\n    code-copy: true\n    self-contained: true\n    toc-location: left\nknitr: \n    opts_chunk: \n        collapse: TRUE\n        dpi: 150\n        message: FALSE\n        warning: FALSE\n        error: TRUE\neditor: visual\n---\n\nIn this document, we investigate whether the Shannon diversity and Observed species of samples is correlated to their sequencing depth.  \n\n## Load libraries  \n```{r}\nlibrary(phyloseq)\nlibrary(microbiome)\nlibrary(ggpubr) # stats with viz\nlibrary(patchwork) # combine plots \n```\n\n## Read Data  \n```{r}\npseq <- readRDS(\"data/FuentesIliGutData.rds\")\n```\n\n## Check Reads  \n```{r}\n# add reads/sample to sample_data()\nsample_data(pseq)$reads.per.sample <- sample_sums(pseq)\n# Compare between groups\npseq |> \n    microbiome::meta() |> \n    ggplot(aes(ILI, reads.per.sample)) +\n    geom_violin()+\n    geom_boxplot(width=0.2) +\n    labs(x=\"\", y=\"Reads/sample\")\n```\n\nNote here that we have higher reads/sample in L2 group.  \n## Alpha diversity  \n```{r}\n# we can add shannon diversity to sample_data(pseq)\nsample_data(pseq)$shannon <- microbiome::diversity(pseq, index=\"shannon\")[,1]\nsample_data(pseq)$observed <- microbiome::richness(pseq, index=\"observed\")[,1]\np.shannon <- meta(pseq) |> \n    ggplot(aes(ILI, shannon)) +\n    geom_violin()+\n    geom_boxplot(width=0.2) +\n    labs(x=\"\", y=\"Shannon Diversity\")\np.observed <- meta(pseq) |> \n    ggplot(aes(ILI, observed)) +\n    geom_violin()+\n    geom_boxplot(width=0.2) +\n    labs(x=\"\", y=\"Observed ASVs\")\n\np.shannon | p.observed\n```\n\n## Correlation  \nCheck if reads per sample is correlated to Shannon diversity \n\n```{r}\np.shanon.cor <- meta(pseq) |> \n    ggplot(aes(reads.per.sample, shannon)) +\n    geom_point() +\n    geom_smooth(method = \"lm\") +\n    ggpubr::stat_cor(method = \"spearman\", label.y = 2)+\n    labs(x=\"Reads/sample\", y=\"Shannon Diversity\")\np.observed.cor <- meta(pseq) |> \n    ggplot(aes(reads.per.sample, observed)) +\n    geom_point() +\n    geom_smooth(method = \"lm\") +\n    ggpubr::stat_cor(method = \"spearman\", label.y = 2) +\n    labs(x=\"Reads/sample\", y=\"Observed ASVs\")\n\np.shanon.cor | p.observed.cor\n```\n\n```{r}\nsessionInfo()\n```\nAs you may notice this is one of the common tasks in a microbiota profiling study. This can be boring if you’re constantly writing or copying the same code.\nBut what if you could automate these tasks and save yourself time and effort? That’s where Quarto comes in. In a recent post, Mike Mahoney demonstrated How to use Quarto for Parameterized Reporting. This inspired me to try Quarto for automating my analysis.\nOne of the handy features of Quarto is the params option, which can be used in the .qmd file to customize your analysis for each project. This option is also available in the Rmarkdown format. Here’s an example of how to use params in .qmd:\n---\ntitle: \"Microbiota Analysis\"\nauthor: Sudarshan A. Shetty\ndate: \"2023-01-08\"\nformat:\n  html:\n    code-tools: true\n    code-fold: false\n    code-copy: true\n    self-contained: true\n    toc-location: left\nknitr: \n    opts_chunk: \n        collapse: TRUE\n        dpi: 150\n        message: FALSE\n        warning: FALSE\n        error: TRUE\neditor: visual\n\nparams:\n    pseq_path: pseq_path\n    primary_var: primary_var\n---\nDid you notice the pseq_path: pseq_path and primary_var: primary_var variables in the .qmd file? These are floating variables, which means they can be customized for each project. To make it even easier to reuse this analysis, you can write a simple function that processes the .qmd file (called basic_analysis.qmd) and stores it in your RProject directory.\nHere’s a draft of what this file might look like: notice that the ILI variable has been replaced with primary_var in the plotting aes_string. This allows you to customize the analysis for each project simply by changing the values of these floating variables.\n---\ntitle: \"Microbiota Analysis\"\nauthor: Sudarshan A. Shetty\ndate: \"2023-01-08\"\nformat:\n  html:\n    code-tools: true\n    code-fold: false\n    code-copy: true\n    self-contained: true\n    toc-location: left\nknitr: \n    opts_chunk: \n        collapse: TRUE\n        dpi: 150\n        message: FALSE\n        warning: FALSE\n        error: TRUE\neditor: visual\nparams:\n    pseq_path: pseq_path\n    primary_var: primary_var\n---\n\nIn this document, we investigate whether the Shannon diversity and Observed ASVs of samples is correlated to their sequencing depth.  \n## Load libraries\n\n```{r}\nlibrary(phyloseq)\nlibrary(microbiome)\nlibrary(ggpubr) # stats with viz\nlibrary(patchwork) # combine plots \n```\n\n## Define parameters  \n```{r}\npseq_path = params$pseq_path\nprimary_var = params$primary_var\n```\n\n\n## Read Data\n```{r}\npseq <- readRDS(pseq_path)\n```\n\n## Check Reads\n```{r}\n# add reads/sample to sample_data()\nsample_data(pseq)$reads.per.sample <- sample_sums(pseq)\n# Compare between groups\n\n# notice here the use of ase_string instead of aes for ggplot. Since our primary variable 'primary_var' will be in quotes, we can use this handy option in ggplot2  \npseq |> \n    microbiome::meta() |> \n    ggplot(aes_string(primary_var, \"reads.per.sample\")) +\n    geom_violin()+\n    geom_boxplot(width=0.2) +\n    labs(x=\"\", y=\"Reads/sample\")\n```\n\n\n## Alpha diversity\n```{r}\n# we can add shannon diversity to sample_data(pseq)\nsample_data(pseq)$shannon <- microbiome::diversity(pseq, index=\"shannon\")[,1]\nsample_data(pseq)$observed <- microbiome::richness(pseq, index=\"observed\")[,1]\np.shannon <- meta(pseq) |> \n    ggplot(aes_string(primary_var, \"shannon\")) +\n    geom_violin()+\n    geom_boxplot(width=0.2) +\n    labs(x=\"\", y=\"Shannon Diversity\")\np.observed <- meta(pseq) |> \n    ggplot(aes_string(primary_var, \"observed\")) +\n    geom_violin()+\n    geom_boxplot(width=0.2) +\n    labs(x=\"\", y=\"Observed ASVs\")\n\np.shannon | p.observed\n```\n\n## Correlation\nCheck if reads per sample is correlated to Shannon diversity\n```{r}\n\np.shanon.cor <- meta(pseq) |> \n    ggplot(aes_string(\"reads.per.sample\", \"shannon\")) +\n    geom_point() +\n    geom_smooth(method = \"lm\") +\n    ggpubr::stat_cor(method = \"spearman\", label.y = 2)+\n    labs(x=\"Reads/sample\", y=\"Shannon Diversity\")\np.observed.cor <- meta(pseq) |> \n    ggplot(aes_string(\"reads.per.sample\", \"observed\")) +\n    geom_point() +\n    geom_smooth(method = \"lm\") +\n    ggpubr::stat_cor(method = \"spearman\", label.y = 2) +\n    labs(x=\"Reads/sample\", y=\"Observed ASVs\")\n\np.shanon.cor | p.observed.cor\n```\n\n```{r}\nsessionInfo()\n```\nNow to render this report we can write a simple function called build_my_report.\n\nbuild_my_report <- function(qmd_file = NULL,\n                            pseq_path = NULL,\n                            primary_var = NULL) {\n    \n    {\n        # extracting the name of the source .qmd file\n        base_name <- qmd_file\n        base_name <- gsub(\".qmd\", \"\", base_name)\n        # render the file \n        quarto::quarto_render(input = qmd_file,\n                              # We add the suffix '_report' to output html file\n                              output_file = paste0(base_name, \"_report.html\"),\n                              quiet = FALSE,\n                              # supply the params arguments \n                              execute_params = list(\"pseq_path\" = pseq_path,\n                                                    \"primary_var\" = primary_var),\n                              execute_debug = FALSE,\n                              cache = NULL,\n                              cache_refresh = FALSE,\n                              debug = FALSE)\n    }\n}\n\nThe build_my_report(qmd_file, pseq_path, primary_var) function takes three arguments:\n\nqmd_file is the name of the .qmd template file (e.g. basic_analysis.qmd).\npseq_path is the path to the phyloseq object that you want to analyze.\nprimary_var is the name of the primary variable you want to investigate. In this case, ILI is the column name in the sample_data() of the FuentesIliGutData phyloseq object.\n\n\nbuild_my_report(qmd_file = \"basic_analysis.qmd\",\n                pseq_path = \"data/FuentesIliGutData.rds\",\n                primary_var = \"ILI\")  \n\n\n\n\n\n\n\nNote\n\n\n\nCheck the rendered html file in the tab Example Report above!\n\n\nI think that Quarto is a useful tool for microbiome researchers looking to streamline their workflows and save time on routine analyses. By using the params option in the .qmd file, you can easily customize your analysis for each project, while the ability to store your .qmd file in your RProject directory means you can easily reuse your analysis across multiple projects. The reports can be standardized and shared easily with collaborators. There are several aesthetic and practical settings like hiding codes, defining visualization themes, etc as well as using the knitr::opts_chunk for setting global rules for your documents. Moreover, beyond html, reports can be generated as pdf or word doc files. You can familiarize yourself with Quarto quide and explore the numerous options for automating your data analysis workflows. Give it a try and see how it can change the way you approach your routine microbiome data analytics.\n\n© Copyright 2023 Sudarshan A. Shetty"
  },
  {
    "objectID": "basic_analysis_report.html",
    "href": "basic_analysis_report.html",
    "title": "Microbiota Analysis",
    "section": "",
    "text": "In this document, we investigate whether the Shannon diversity and Observed ASVs of samples is correlated to their sequencing depth."
  },
  {
    "objectID": "basic_analysis_report.html#load-libraries",
    "href": "basic_analysis_report.html#load-libraries",
    "title": "Microbiota Analysis",
    "section": "Load libraries",
    "text": "Load libraries\n\nlibrary(phyloseq)\nlibrary(microbiome)\nlibrary(ggpubr) # stats with viz\nlibrary(patchwork) # combine plots"
  },
  {
    "objectID": "basic_analysis_report.html#define-parameters",
    "href": "basic_analysis_report.html#define-parameters",
    "title": "Microbiota Analysis",
    "section": "Define parameters",
    "text": "Define parameters\n\npseq_path = params$pseq_path\nprimary_var = params$primary_var"
  },
  {
    "objectID": "basic_analysis_report.html#read-data",
    "href": "basic_analysis_report.html#read-data",
    "title": "Microbiota Analysis",
    "section": "Read Data",
    "text": "Read Data\n\npseq <- readRDS(pseq_path)"
  },
  {
    "objectID": "basic_analysis_report.html#check-reads",
    "href": "basic_analysis_report.html#check-reads",
    "title": "Microbiota Analysis",
    "section": "Check Reads",
    "text": "Check Reads\n\n# add reads/sample to sample_data()\nsample_data(pseq)$reads.per.sample <- sample_sums(pseq)\n# Compare between groups\npseq |> \n    microbiome::meta() |> \n    ggplot(aes_string(primary_var, \"reads.per.sample\")) +\n    geom_violin()+\n    geom_boxplot(width=0.2) +\n    labs(x=\"\", y=\"Reads/sample\")\n\n\n\n\n\n\n\n\nNote here that we have higher reads/sample in L2 group."
  },
  {
    "objectID": "basic_analysis_report.html#alpha-diversity",
    "href": "basic_analysis_report.html#alpha-diversity",
    "title": "Microbiota Analysis",
    "section": "Alpha diversity",
    "text": "Alpha diversity\n\n# we can add shannon diversity to sample_data(pseq)\nsample_data(pseq)$shannon <- microbiome::diversity(pseq, index=\"shannon\")[,1]\nsample_data(pseq)$observed <- microbiome::richness(pseq, index=\"observed\")[,1]\np.shannon <- meta(pseq) |> \n    ggplot(aes_string(primary_var, \"shannon\")) +\n    geom_violin()+\n    geom_boxplot(width=0.2) +\n    labs(x=\"\", y=\"Shannon Diversity\")\np.observed <- meta(pseq) |> \n    ggplot(aes_string(primary_var, \"observed\")) +\n    geom_violin()+\n    geom_boxplot(width=0.2) +\n    labs(x=\"\", y=\"Observed ASVs\")\n\np.shannon | p.observed"
  },
  {
    "objectID": "basic_analysis_report.html#correlation",
    "href": "basic_analysis_report.html#correlation",
    "title": "Microbiota Analysis",
    "section": "Correlation",
    "text": "Correlation\nCheck if reads per sample is correlated to Shannon diversity and Observed ASVs.\n\np.shanon.cor <- meta(pseq) |> \n    ggplot(aes_string(\"reads.per.sample\", \"shannon\")) +\n    geom_point() +\n    geom_smooth(method = \"lm\") +\n    ggpubr::stat_cor(method = \"spearman\", label.y = 2)+\n    labs(x=\"Reads/sample\", y=\"Shannon Diversity\")\np.observed.cor <- meta(pseq) |> \n    ggplot(aes_string(\"reads.per.sample\", \"observed\")) +\n    geom_point() +\n    geom_smooth(method = \"lm\") +\n    ggpubr::stat_cor(method = \"spearman\", label.y = 2) +\n    labs(x=\"Reads/sample\", y=\"Observed ASVs\")\n\np.shanon.cor | p.observed.cor\n\n\n\n\n\n\n\n\n\nsessionInfo()\n## R version 4.2.1 (2022-06-23 ucrt)\n## Platform: x86_64-w64-mingw32/x64 (64-bit)\n## Running under: Windows 10 x64 (build 19044)\n## \n## Matrix products: default\n## \n## locale:\n## [1] LC_COLLATE=English_United States.utf8 \n## [2] LC_CTYPE=English_United States.utf8   \n## [3] LC_MONETARY=English_United States.utf8\n## [4] LC_NUMERIC=C                          \n## [5] LC_TIME=English_United States.utf8    \n## \n## attached base packages:\n## [1] stats     graphics  grDevices utils     datasets  methods   base     \n## \n## other attached packages:\n## [1] patchwork_1.1.2   ggpubr_0.4.0      microbiome_1.18.0 ggplot2_3.3.6    \n## [5] phyloseq_1.40.0  \n## \n## loaded via a namespace (and not attached):\n##  [1] Biobase_2.56.0         tidyr_1.2.0            jsonlite_1.8.0        \n##  [4] splines_4.2.1          foreach_1.5.2          carData_3.0-5         \n##  [7] assertthat_0.2.1       stats4_4.2.1           GenomeInfoDbData_1.2.8\n## [10] yaml_2.3.5             backports_1.4.1        pillar_1.8.1          \n## [13] lattice_0.20-45        glue_1.6.2             digest_0.6.29         \n## [16] XVector_0.36.0         ggsignif_0.6.3         colorspace_2.0-3      \n## [19] htmltools_0.5.3        Matrix_1.5-1           plyr_1.8.7            \n## [22] pkgconfig_2.0.3        broom_1.0.1            zlibbioc_1.42.0       \n## [25] purrr_0.3.4            scales_1.2.1           Rtsne_0.16            \n## [28] tibble_3.1.7           mgcv_1.8-40            farver_2.1.1          \n## [31] car_3.1-0              generics_0.1.3         IRanges_2.30.0        \n## [34] ellipsis_0.3.2         withr_2.5.0            BiocGenerics_0.42.0   \n## [37] cli_3.3.0              survival_3.3-1         magrittr_2.0.3        \n## [40] crayon_1.5.1           evaluate_0.16          fansi_1.0.3           \n## [43] nlme_3.1-157           MASS_7.3-57            rstatix_0.7.0         \n## [46] vegan_2.6-2            tools_4.2.1            data.table_1.14.2     \n## [49] lifecycle_1.0.2        stringr_1.4.1          Rhdf5lib_1.18.2       \n## [52] S4Vectors_0.34.0       munsell_0.5.0          cluster_2.1.3         \n## [55] Biostrings_2.64.0      ade4_1.7-19            compiler_4.2.1        \n## [58] GenomeInfoDb_1.32.2    rlang_1.0.5            rhdf5_2.40.0          \n## [61] grid_4.2.1             RCurl_1.98-1.6         iterators_1.0.14      \n## [64] rhdf5filters_1.8.0     biomformat_1.24.0      rstudioapi_0.14       \n## [67] htmlwidgets_1.5.4      igraph_1.3.1           labeling_0.4.2        \n## [70] bitops_1.0-7           rmarkdown_2.16         gtable_0.3.1          \n## [73] codetools_0.2-18       multtest_2.52.0        abind_1.4-5           \n## [76] DBI_1.1.3              reshape2_1.4.4         R6_2.5.1              \n## [79] knitr_1.40             dplyr_1.0.9            fastmap_1.1.0         \n## [82] utf8_1.2.2             permute_0.9-7          ape_5.6-2             \n## [85] stringi_1.7.6          parallel_4.2.1         Rcpp_1.0.8.3          \n## [88] vctrs_0.4.1            tidyselect_1.1.2       xfun_0.31"
  }
]